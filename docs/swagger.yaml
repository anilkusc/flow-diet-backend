basePath: /
definitions:
  calendar.Calendar:
    properties:
      date_epoch:
        example: 1643743444
        type: integer
      recipe_id:
        example: 1
        type: integer
      user_id:
        example: 1
        type: integer
    type: object
  user.User:
    properties:
      address:
        example: myadress 123121
        type: string
      age:
        example: 25
        type: integer
      diet:
        description: vegaterian , vegan , omnivor , carnivor
        example: omnivor
        type: string
      email:
        example: test@test.com
        type: string
      favorite_recipes:
        items:
          type: integer
        type: array
      height:
        example: 170
        type: integer
      name:
        example: test user
        type: string
      password:
        example: testpass
        type: string
      phone:
        example: "+905355353535"
        type: string
      role:
        description: root,admin,editor,user,anonymous
        example: user
        type: string
      username:
        example: testuser
        type: string
      weight:
        example: 70
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: soberkoder@swagger.io
    name: API Support
  description: This is a sample serice for managing orders
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Flow-Diet-Backend API
  version: "1.0"
paths:
  /calendar/recipes:
    get:
      consumes:
      - application/json
      description: Get recipes of the user weekly
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Get recipes of user weekly
      tags:
      - calendar
  /calendar/recipes/create:
    post:
      consumes:
      - application/json
      description: User creates a recipe in the calendar
      parameters:
      - description: Create Recipe In Calendar
        in: body
        name: calendar
        required: true
        schema:
          $ref: '#/definitions/calendar.Calendar'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Create Recipe In User Calendar
      tags:
      - calendar
  /calendar/recipes/delete:
    post:
      consumes:
      - application/json
      description: Delete Recipe In User Calendar
      parameters:
      - description: 'Delete Recipe In Calendar. Please Use thisfor send request:
          {''ID'':1}'
        in: body
        name: calendar
        required: true
        schema:
          $ref: '#/definitions/calendar.Calendar'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Delete Recipe In User Calendar
      tags:
      - calendar
  /calendar/recipes/update:
    post:
      consumes:
      - application/json
      description: Update Recipe In User Calendar
      parameters:
      - description: Update Recipe In Calendar
        in: body
        name: calendar
        required: true
        schema:
          $ref: '#/definitions/calendar.Calendar'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Update Recipe In User Calendar
      tags:
      - calendar
  /user/logout:
    post:
      consumes:
      - application/json
      description: Logout for the user
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Logout User
      tags:
      - user
  /user/signin:
    post:
      consumes:
      - application/json
      description: Sign in with specified user
      parameters:
      - description: Sign In
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.User'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Signin User
      tags:
      - user
  /user/signup:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: Create New User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.User'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Signup User
      tags:
      - user
swagger: "2.0"

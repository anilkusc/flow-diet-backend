basePath: /
definitions:
  calendar.Calendar:
    properties:
      date_epoch:
        example: 1643743444
        type: integer
      meal:
        example: breakfast
        type: string
      prepared:
        example: false
        type: boolean
      recipe_id:
        example: 1
        type: integer
      user_id:
        example: 1
        type: integer
    type: object
  material.Material:
    properties:
      material_name:
        example: bread
        type: string
      material_photo_urls:
        example:
        - S3URL1
        - S3URL2
        items:
          type: string
        type: array
      material_tags:
        example:
        - vegan
        items:
          type: string
        type: array
      measurement_quantity:
        example: gram
        type: string
      measurement_size:
        example: 200
        type: number
    type: object
  recipe.Recipe:
    properties:
      appropriate_meals:
        description: Breakfast, Snack , Noon , AfterNoon , Evening , Night // It should
          be added by appropriate wieght sort.
        example:
        - breakfast
        - snack
        items:
          type: string
        type: array
      calori:
        description: 'TODO: will be migrated to materials and it will be calculated
          from'
        example: 252
        type: integer
      cooking_time_minute:
        example: 10
        type: integer
      cousines:
        example:
        - italian
        items:
          type: string
        type: array
      for_how_many_people:
        example: 2
        type: integer
      ingredients:
        example:
        - 1
        - 2
        items:
          type: integer
        type: array
      photo_urls:
        example:
        - S3URL1
        - S3URL2
        items:
          type: string
        type: array
      preperation:
        example:
        - bla bla bla
        items:
          type: string
        type: array
      preperation_time:
        example: 15
        type: integer
      recipe_diet_level:
        example: 1
        type: integer
      tags:
        example:
        - vegan
        items:
          type: string
        type: array
      title:
        example: Sushi With Wassabi
        type: string
      video_urls:
        example:
        - S3URL1
        - S3URL2
        items:
          type: string
        type: array
    type: object
  shopping.Shopping:
    properties:
      end_date:
        example: 1643743448
        type: integer
      ingredients:
        description: Ingredients ID
        example:
        - 1
        - 2
        - 3
        items:
          type: integer
        type: array
      start_date:
        example: 1643743444
        type: integer
      user_id:
        example: 1
        type: integer
    type: object
  user.User:
    properties:
      activity_level:
        description: 1,2,3,4,5
        example: 1
        type: integer
      address:
        example: myadress 123121
        type: string
      age:
        example: 25
        type: integer
      blood_group:
        description: A+,A- etc.
        example: A+
        type: string
      diet_level:
        description: '1: vegan ,2:vegaterian,3: omnivor ,4: carnivor'
        example: 1
        type: integer
      dislikes:
        example:
        - onion
        items:
          type: string
        type: array
      email:
        example: test@test.com
        type: string
      favorite_cousines:
        example:
        - italian
        items:
          type: string
        type: array
      favorite_recipes:
        example:
        - 1
        - 2
        - 3
        items:
          type: integer
        type: array
      gender:
        description: male,female,other
        example: male
        type: string
      height:
        example: 170
        type: integer
      likes:
        example:
        - kebap
        - pizza
        items:
          type: string
        type: array
      name:
        example: test user
        type: string
      password:
        example: testpass
        type: string
      phone:
        example: "+905355353535"
        type: string
      preferred_meals:
        example:
        - breakfast
        items:
          type: string
        type: array
      prohibits:
        example:
        - sugar
        items:
          type: string
        type: array
      role:
        description: root,admin,editor,user,anonymous
        example: admin
        type: string
      username:
        example: testuser
        type: string
      wants:
        description: gain , lost , protect // (weights)
        example: gain
        type: string
      weight:
        example: 70
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: soberkoder@swagger.io
    name: API Support
  description: This is a sample serice for managing orders
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Flow-Diet-Backend API
  version: "1.0"
paths:
  /calendar/recipes:
    get:
      consumes:
      - application/json
      description: Get recipes of the user weekly
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Get recipes of user weekly
      tags:
      - calendar
  /calendar/recipes/create:
    post:
      consumes:
      - application/json
      description: User creates a recipe in the calendar
      parameters:
      - description: Create Recipes In Calendar
        in: body
        name: calendar
        required: true
        schema:
          items:
            $ref: '#/definitions/calendar.Calendar'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Create Recipes In User Calendar
      tags:
      - calendar
  /calendar/recipes/delete:
    delete:
      consumes:
      - application/json
      description: Delete Recipe In User Calendar
      parameters:
      - description: 'Delete Recipe In Calendar. Please Use thisfor send request:
          {''ID'':1}'
        in: body
        name: calendar
        required: true
        schema:
          $ref: '#/definitions/calendar.Calendar'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Delete Recipe In User Calendar
      tags:
      - calendar
  /calendar/recipes/update:
    patch:
      consumes:
      - application/json
      description: Update Recipe In User Calendar
      parameters:
      - description: Update Recipe In Calendar
        in: body
        name: calendar
        required: true
        schema:
          $ref: '#/definitions/calendar.Calendar'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Update Recipe In User Calendar
      tags:
      - calendar
  /materials/create:
    post:
      consumes:
      - application/json
      description: Create A New Material
      parameters:
      - description: Create New Material
        in: body
        name: recipe
        required: true
        schema:
          $ref: '#/definitions/material.Material'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Create a new material
      tags:
      - material
  /materials/delete:
    delete:
      consumes:
      - application/json
      description: Delete Material
      parameters:
      - description: Delete a Material
        in: body
        name: material
        required: true
        schema:
          $ref: '#/definitions/material.Material'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Delete Material
      tags:
      - material
  /materials/get:
    post:
      consumes:
      - application/json
      description: Get a material
      parameters:
      - description: Get Material
        in: body
        name: material
        required: true
        schema:
          $ref: '#/definitions/material.Material'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Get a material
      tags:
      - material
  /materials/update:
    patch:
      consumes:
      - application/json
      description: Update Material
      parameters:
      - description: Update a Material
        in: body
        name: material
        required: true
        schema:
          $ref: '#/definitions/material.Material'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Update Material
      tags:
      - material
  /recipes/all:
    get:
      consumes:
      - application/json
      description: List All Recipes
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: List all recipes
      tags:
      - recipe
  /recipes/create:
    post:
      consumes:
      - application/json
      description: Create A New Recipe
      parameters:
      - description: Create New Recipe
        in: body
        name: recipe
        required: true
        schema:
          $ref: '#/definitions/recipe.Recipe'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Create a new recipe
      tags:
      - recipe
  /recipes/delete:
    delete:
      consumes:
      - application/json
      description: Delete Recipe
      parameters:
      - description: Delete a Recipe
        in: body
        name: recipe
        required: true
        schema:
          $ref: '#/definitions/recipe.Recipe'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Delete Recipe
      tags:
      - recipe
  /recipes/get:
    post:
      consumes:
      - application/json
      description: Get a recipe
      parameters:
      - description: Get Recipe
        in: body
        name: recipe
        required: true
        schema:
          $ref: '#/definitions/recipe.Recipe'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Get a recipe
      tags:
      - recipe
  /recipes/update:
    patch:
      consumes:
      - application/json
      description: Update Recipe
      parameters:
      - description: Update a Recipe
        in: body
        name: recipe
        required: true
        schema:
          $ref: '#/definitions/recipe.Recipe'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Update Recipe
      tags:
      - recipe
  /recommendation/getrecipes:
    post:
      consumes:
      - application/json
      description: Get Recommendations
      parameters:
      - description: 'dates(epoch format) : {''start_date'':1643914403 ,''end_date'':1644173603
          }'
        in: body
        name: recommendation
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Get Recommendations
      tags:
      - recommendation
  /search/recipes:
    post:
      consumes:
      - application/json
      description: Search Recipes by Title
      parameters:
      - description: Please write search word directly
        in: body
        name: search
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Search Recipes
      tags:
      - search
  /shopping/create:
    post:
      consumes:
      - application/json
      description: Create A New Shopping List
      parameters:
      - description: Create New shopping List
        in: body
        name: shopping
        required: true
        schema:
          $ref: '#/definitions/shopping.Shopping'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Create a new shopping list
      tags:
      - shopping
  /shopping/delete:
    delete:
      consumes:
      - application/json
      description: Delete Shopping List
      parameters:
      - description: Delete Shopping List
        in: body
        name: shopping
        required: true
        schema:
          $ref: '#/definitions/shopping.Shopping'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Delete Shopping List
      tags:
      - shopping
  /shopping/get:
    post:
      consumes:
      - application/json
      description: Get a shopping list
      parameters:
      - description: Get Shopping List
        in: body
        name: shopping
        required: true
        schema:
          $ref: '#/definitions/shopping.Shopping'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Get a shopping list
      tags:
      - shopping
  /shopping/list:
    post:
      consumes:
      - application/json
      description: List All Shopping Lists
      parameters:
      - description: Get shopping lists by date
        in: body
        name: shopping
        required: true
        schema:
          $ref: '#/definitions/shopping.Shopping'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Get shopping lists
      tags:
      - shopping
  /shopping/update:
    patch:
      consumes:
      - application/json
      description: Update Shopping List
      parameters:
      - description: Update Shopping List
        in: body
        name: shopping
        required: true
        schema:
          $ref: '#/definitions/shopping.Shopping'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Update Shopping List
      tags:
      - shopping
  /user/logout:
    post:
      consumes:
      - application/json
      description: Logout for the user
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Logout User
      tags:
      - user
  /user/signin:
    post:
      consumes:
      - application/json
      description: Sign in with specified user
      parameters:
      - description: Sign In
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.User'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Signin User
      tags:
      - user
  /user/signup:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: Create New User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.User'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Signup User
      tags:
      - user
swagger: "2.0"
